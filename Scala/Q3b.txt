    val reviewFile = "/yelpdatafall/review/review.csv"
    val businessFile = "/yelpdatafall/business/business.csv"

    
    val reviewData = sc.textFile(reviewFile)
    val res = reviewData.map(line => line.split("\\^"))
    val reviewMap = res.map(line => (line(2),(line(3).toDouble,1.0)))
    val tempData = reviewMap.reduceByKey((x,y) => ((x._1+y._1)/(x._2+y._2),1.0))
    val avgData = tempData.map{case (key,value)=>(key,value._1.toInt)}
    val resultData= avgData.map(keyvalue=>keyvalue.swap).
      sortByKey(false,1).
      map(keyvalue=>keyvalue.swap).
      take(10)
    val unSortedMap = scala.collection.mutable.Map[String,Int]()
    for(i<-0 to resultData.length-1){
      unSortedMap.put(resultData(i)._1,resultData(i)._2)
    }
    val sortedMap = unSortedMap.toSeq.sortBy(_._1)
    for(i<-0 to sortedMap.length-1){
      println(sortedMap(i)._1+" "+sortedMap(i)._2)
    }
    val businessData = sc.textFile(businessFile)
    val businessMap = businessData.map(line => line.split("\\^")).map(line => (line(0),(line(1),line(2))))
    val broadcasted = sc.broadcast(businessMap)

    broadcasted.value.foreach(keyVal => for(i<-0 to sortedMap.length-1)
    {
      if((sortedMap(i)._1.equals(keyVal._1)))
      {
        println(keyVal._1+" "+keyVal._2)
      }
    })